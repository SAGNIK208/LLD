@startuml

/' diagram meta data start
config=StructureConfiguration;
{
  "projectClassification": {
    "searchMode": "OpenProject", // OpenProject, AllProjects
    "includedProjects": "",
    "pathEndKeywords": "*.impl",
    "isClientPath": "",
    "isClientName": "",
    "isTestPath": "",
    "isTestName": "",
    "isMappingPath": "",
    "isMappingName": "",
    "isDataAccessPath": "",
    "isDataAccessName": "",
    "isDataStructurePath": "",
    "isDataStructureName": "",
    "isInterfaceStructuresPath": "",
    "isInterfaceStructuresName": "",
    "isEntryPointPath": "",
    "isEntryPointName": "",
    "treatFinalFieldsAsMandatory": false
  },
  "graphRestriction": {
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "removeByInheritance": "", // inheritance/annotation based filtering is done in a second step
    "removeByAnnotation": "",
    "removeByClassPackage": "", // cleanup the graph after inheritance/annotation based filtering is done
    "removeByClassName": "",
    "cutMappings": false,
    "cutEnum": false,
    "cutTests": true,
    "cutClient": true,
    "cutDataAccess": false,
    "cutInterfaceStructures": false,
    "cutDataStructures": false,
    "cutGetterAndSetter": true,
    "cutConstructors": true
  },
  "graphTraversal": {
    "forwardDepth": 3,
    "backwardDepth": 3,
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "hideMappings": false,
    "hideDataStructures": false,
    "hidePrivateMethods": false,
    "hideInterfaceCalls": true, // indirection: implementation -> interface (is hidden) -> implementation
    "onlyShowApplicationEntryPoints": false, // root node is included
    "useMethodCallsForStructureDiagram": "ForwardOnly" // ForwardOnly, BothDirections, No
  },
  "details": {
    "aggregation": "None", // ByClass, GroupByClass, None
    "showClassGenericTypes": true,
    "showMethods": true,
    "showMethodParameterNames": true,
    "showMethodParameterTypes": true,
    "showMethodReturnType": true,
    "showPackageLevels": 5,
    "showDetailedClassStructure": true
  },
  "rootClass": "com.lld.hotelbooking.App",
  "extensionCallbackMethod": "" // qualified.class.name#methodName - signature: public static String method(String)
}
diagram meta data end '/



digraph g {
    rankdir="TB"
    splines=polyline
    

'nodes 
App807959620[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)App</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addDays(date: Date, days: int): Date</TD></TR>
<TR><TD ALIGN="LEFT" >+ main(args: String[])</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Hotel985259812[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Hotel</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   ID: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   location: Location [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   name: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   rooms: Map&lt;String, Room&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ updateRooms(id: String, room: Room)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

HotelManagementSystem56357456[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)HotelManagementSystem</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   hotels: Map&lt;String, Hotel&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   reservationSystem: ReservationSystem [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addHotel(hotel: Hotel)</TD></TR>
<TR><TD ALIGN="LEFT" >+ bookRooms(hotelId: String, roomIds: List&lt;String&gt;, startDate: Date, endDate: Date, user: User)</TD></TR>
<TR><TD ALIGN="LEFT" >+ reservedBookings()</TD></TR>
<TR><TD ALIGN="LEFT" >+ roomsAvailable(hotelId: String, startDate: Date, endDate: Date): List&lt;Room&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Location985259812[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Location</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   city: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   country: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Reservation985259812[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Reservation</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   endDate: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   roomId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   startDate: Date [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ exists(startDate: Date, endDate: Date): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ exists(roomId: String, startDate: Date, endDate: Date): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ReservationLockProvider56357456[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ReservationLockProvider</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   lockedReservationList: Map&lt;String, List&lt;ReservationLock&gt;&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   timeout: long [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getLockedReservations(hotelId: String): List&lt;Reservation&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ lockReservation(hotelId: String, roomIds: List&lt;String&gt;, startDate: Date, endDate: Date, user: User)</TD></TR>
<TR><TD ALIGN="LEFT" >+ unlockReservation(hotelId: String, roomIds: List&lt;String&gt;, startDate: Date, endDate: Date, user: User)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ReservationSystem56357456[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ReservationSystem</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   provider: IReservationLockProvider [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   reservedBookings: Map&lt;String, List&lt;Reservation&gt;&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ bookRooms(hotelId: String, roomIds: List&lt;String&gt;, startDate: Date, endDate: Date, user: User)</TD></TR>
<TR><TD ALIGN="LEFT" >+ printReservedBookings()</TD></TR>
<TR><TD ALIGN="LEFT" >+ roomsBooked(hotelId: String, startDate: Date, endDate: Date): List&lt;String&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Room985259812[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Room</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   ID: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   hotelId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   roomType: RoomType [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

'edges    
Hotel985259812 -> Location985259812[label="location
[0..1]"];
Hotel985259812 -> Room985259812[label="rooms
[0..*]"];
HotelManagementSystem56357456 -> Hotel985259812[label="hotels
[0..*]"];
HotelManagementSystem56357456 -> ReservationSystem56357456[label="reservationSystem
[0..1]"];
ReservationSystem56357456 -> Reservation985259812[label="reservedBookings
[0..*]"];
ReservationSystem56357456 -> ReservationLockProvider56357456[arrowhead=none];
    
}
@enduml